//
//  LocationBlockViewController.swift
//  Qorum
//
//  Created by Stanislav on 31.01.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LocationBlockDisplayLogic: class {
    func display(viewModel: LocationBlock.ViewModel)
    func showLoader(_ message: String?)
    func hideLoader()
}

class LocationBlockViewController: BaseViewController, SBInstantiable, ScrollableInput {
    
    static let storyboardName = StoryboardName.locationBlock
    var interactor: LocationBlockBusinessLogic?
    var router: (NSObjectProtocol & LocationBlockRoutingLogic & LocationBlockDataPassing)?
    
    
    // MARK: - Outlets
    @IBOutlet weak var locationBlockLabel: UILabel!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var submitButton: UIButton!
    @IBOutlet weak var scrollView: UIScrollView!
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    private func setup() {
        modalPresentationStyle = .custom
        modalTransitionStyle = .crossDissolve
        modalPresentationCapturesStatusBarAppearance = true
        let viewController = self
        let interactor = LocationBlockInteractor()
        let presenter = LocationBlockPresenter()
        let router = LocationBlockRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureViews()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        addKeyboardObserver()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        view.endEditing(true)
        removeKeyboardObserver()
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    // MARK: - ScrollableInput
    
    @objc func inputChanged(_ notification: Notification) {
        update(scrollView: scrollView, with: notification.userInfo)
    }
    
    // MARK: - Actions
    
    @IBAction func submitButtonPressed(_ sender: Any) {
        interactor?.verifyEmail(request: .init(email: emailTextField.text ?? ""))
    }
    
    // MARK: - Misc
    private func configureViews() {
        let text = NSMutableAttributedString()
        let paragraphStyle = NSMutableParagraphStyle()
        paragraphStyle.alignment = .center
        paragraphStyle.lineSpacing = 5
        let attributes: [NSAttributedStringKey : Any] = [
            .font : UIFont.montserrat.light(16),
            .paragraphStyle: paragraphStyle
        ]
        text.append(.init(string: "Qorum isn’t available at your location quite yet. Share your email, and we’ll let you know when we go live in your city.", attributes: attributes))
        locationBlockLabel.attributedText = text
        submitButton.isEnabled = false
        emailTextField.tintColor = UIColor(in8bit: 0, 178, 222)
        emailTextField.attributedPlaceholder = NSAttributedString(string: emailTextField.placeholder ?? "",
                                                                  attributes: [.foregroundColor: UIColor(in8bit: 130, 134, 145)])
    }
    
}

// MARK: - LocationBlockDisplayLogic
extension LocationBlockViewController: LocationBlockDisplayLogic {
    
    func display(viewModel: LocationBlock.ViewModel) {
        view.endEditing(true)
        switch viewModel {
        case .warning(let message):
            UIAlertController.presentAsAlert(title: "Error", message: message)
        case .success:
            UIAlertController.presentAsAlert(title: "Email submitted successfully",
                                             message: "We will update your soon!")
        }
    }
    
}

// MARK: - UITextFieldDelegate
extension LocationBlockViewController: UITextFieldDelegate {
    
    func textField(_ textField: UITextField,
                   shouldChangeCharactersIn range: NSRange,
                   replacementString string: String) -> Bool {
        let newString = ((textField.text ?? "") as NSString).replacingCharacters(in: range, with: string)
        submitButton.isEnabled = !newString.isEmpty
        return true
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if submitButton.isEnabled {
            submitButtonPressed(submitButton)
            return true
        }
        return false
    }
    
}

