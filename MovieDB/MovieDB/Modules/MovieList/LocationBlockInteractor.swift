//
//  LocationBlockInteractor.swift
//  Qorum
//
//  Created by Stanislav on 31.01.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LocationBlockBusinessLogic {
    func verifyEmail(request: LocationBlock.Request)
}

protocol LocationBlockDataStore {
    
}

class LocationBlockInteractor: LocationBlockDataStore {
    var presenter: LocationBlockPresentationLogic?
    private(set) lazy var worker = LocationBlockWorker()
}

// MARK: - LocationBlockBusinessLogic
extension LocationBlockInteractor: LocationBlockBusinessLogic {

    func verifyEmail(request: LocationBlock.Request) {
        let email = request.email.trimmingCharacters(in: .whitespacesAndNewlines)
        let validationResult = worker.validate(email: email)
        switch validationResult {
        case let .value(isValid):
            guard isValid else {
                presenter?.present(response: .invalidEmail)
                return
            }
            
            guard let location = LocationService.shared.location else {
                presenter?.present(response: .invalidLocation)
                return
            }
            
            presenter?.showLoader(message: "Submitting Email...")
            let radius = CityManager.shared.marketRadius
            worker.submit(email: email, location: location, radius: radius) { [weak self] response in
                self?.presenter?.hideLoader()
                self?.presenter?.present(response: response)
            }
        case let .error(error):
            presenter?.present(response: .error(error))
        }
    }

}

